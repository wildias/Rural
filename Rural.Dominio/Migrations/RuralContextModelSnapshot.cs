// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rural.Dominio.Data;

namespace Rural.Dominio.Migrations
{
    [DbContext(typeof(RuralContext))]
    partial class RuralContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:Collation", "Latin1_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Rural.Dominio.Models.Campeonato", b =>
                {
                    b.Property<string>("IdCampeonato")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataFinal")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<bool>("EmAndamento")
                        .HasColumnType("bit");

                    b.Property<bool>("Finalizado")
                        .HasColumnType("bit");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("IdCampeonato");

                    b.HasIndex("Descricao");

                    b.ToTable("Campeonato");
                });

            modelBuilder.Entity("Rural.Dominio.Models.Classificacao", b =>
                {
                    b.Property<string>("IdClassificacao")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<decimal?>("CartaoAmarelo")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal?>("CartaoVermelho")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal?>("Derrota")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal?>("Empate")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal?>("GolsContra")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal?>("GolsPro")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("IdCampeonato")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("IdClube")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("Quadro")
                        .HasColumnType("int");

                    b.Property<decimal?>("SaldoGols")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Vitoria")
                        .HasColumnType("decimal(18, 6)");

                    b.HasKey("IdClassificacao");

                    b.HasIndex("IdCampeonato");

                    b.HasIndex("IdClube");

                    b.ToTable("Classificacao");
                });

            modelBuilder.Entity("Rural.Dominio.Models.Clube", b =>
                {
                    b.Property<string>("IdClube")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Auxiliar")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("IdEstadio")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Imagem")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Massagista")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Tecnico")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("IdClube");

                    b.HasIndex("Auxiliar");

                    b.HasIndex("Descricao");

                    b.HasIndex("IdEstadio");

                    b.HasIndex("Massagista");

                    b.HasIndex("Tecnico");

                    b.ToTable("Clube");
                });

            modelBuilder.Entity("Rural.Dominio.Models.Estadio", b =>
                {
                    b.Property<string>("IdEstadio")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Localidade")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("IdEstadio");

                    b.HasIndex("Descricao");

                    b.HasIndex("Localidade");

                    b.ToTable("Estadio");
                });

            modelBuilder.Entity("Rural.Dominio.Models.InfoCampeonato", b =>
                {
                    b.Property<string>("IdInfoCampeonato")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<decimal?>("CartaoAmarelo")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal?>("CartaoVermelho")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal?>("Gols")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("IdCampeonato")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("IdClube")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("IdJogador")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("Quadro")
                        .HasColumnType("int");

                    b.Property<bool>("Suspenso")
                        .HasColumnType("bit");

                    b.HasKey("IdInfoCampeonato");

                    b.HasIndex("IdCampeonato");

                    b.HasIndex("IdClube");

                    b.HasIndex("IdJogador");

                    b.ToTable("InfoCampeonato");
                });

            modelBuilder.Entity("Rural.Dominio.Models.Jogador", b =>
                {
                    b.Property<string>("IdJogador")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime");

                    b.Property<long?>("Documento")
                        .HasColumnType("bigint");

                    b.Property<string>("IdClube")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Imagem")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("IdJogador");

                    b.HasIndex("IdClube");

                    b.HasIndex("Nome");

                    b.ToTable("Jogador");
                });

            modelBuilder.Entity("Rural.Dominio.Models.Jogos", b =>
                {
                    b.Property<string>("IdJogos")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime");

                    b.Property<string>("IdCampeonato")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("IdClubeCasa")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("IdClubeVisitante")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("PlacarCasar")
                        .HasColumnType("int");

                    b.Property<int>("PlacarVisitante")
                        .HasColumnType("int");

                    b.Property<int>("Quadro")
                        .HasColumnType("int");

                    b.Property<int>("Rodada")
                        .HasColumnType("int");

                    b.HasKey("IdJogos");

                    b.HasIndex("IdCampeonato");

                    b.ToTable("Jogos");
                });

            modelBuilder.Entity("Rural.Dominio.Models.Sumula", b =>
                {
                    b.Property<string>("IdSumula")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<string>("IdCampeonato")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("IdJogos")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("IdSumula");

                    b.HasIndex("IdCampeonato");

                    b.HasIndex("IdJogos");

                    b.ToTable("Sumula");
                });

            modelBuilder.Entity("Rural.Dominio.Models.SumulaDetalhes", b =>
                {
                    b.Property<string>("IdSumulaDetalhes")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<decimal?>("CartaoAmarelo")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal?>("CartaoVermelho")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal?>("Gols")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("IdClube")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("IdJogador")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("IdSumula")
                        .HasColumnType("char(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("Quadro")
                        .HasColumnType("int");

                    b.HasKey("IdSumulaDetalhes");

                    b.HasIndex("IdClube");

                    b.HasIndex("IdJogador");

                    b.HasIndex("IdSumula");

                    b.ToTable("SumulaDetalhes");
                });

            modelBuilder.Entity("Rural.Dominio.Models.Usuario", b =>
                {
                    b.Property<string>("IdUsuario")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Rural.Dominio.Models.Classificacao", b =>
                {
                    b.HasOne("Rural.Dominio.Models.Campeonato", "IdCampeonatoNavigation")
                        .WithMany("Classificacao")
                        .HasForeignKey("IdCampeonato")
                        .HasConstraintName("FK_Classificacao_Campeonato");

                    b.HasOne("Rural.Dominio.Models.Clube", "IdClubeNavigation")
                        .WithMany("Classificacao")
                        .HasForeignKey("IdClube")
                        .HasConstraintName("FK_Classificacao_Clube");
                });

            modelBuilder.Entity("Rural.Dominio.Models.Clube", b =>
                {
                    b.HasOne("Rural.Dominio.Models.Estadio", "IdEstadioNavigation")
                        .WithMany("Clube")
                        .HasForeignKey("IdEstadio")
                        .HasConstraintName("FK_Clube_Estadio");
                });

            modelBuilder.Entity("Rural.Dominio.Models.InfoCampeonato", b =>
                {
                    b.HasOne("Rural.Dominio.Models.Campeonato", "IdCampeonatoNavigation")
                        .WithMany("InfoCampeonato")
                        .HasForeignKey("IdCampeonato")
                        .HasConstraintName("FK_InfoCampeonato_Campeonato");

                    b.HasOne("Rural.Dominio.Models.Clube", "IdClubeNavigation")
                        .WithMany("InfoCampeonato")
                        .HasForeignKey("IdClube")
                        .HasConstraintName("FK_InfoCampeonato_Clube");

                    b.HasOne("Rural.Dominio.Models.Jogador", "IdJogadorNavigation")
                        .WithMany("InfoCampeonato")
                        .HasForeignKey("IdJogador")
                        .HasConstraintName("FK_InfoCampeonato_Jogador");
                });

            modelBuilder.Entity("Rural.Dominio.Models.Jogador", b =>
                {
                    b.HasOne("Rural.Dominio.Models.Clube", "IdClubeNavigation")
                        .WithMany("Jogador")
                        .HasForeignKey("IdClube")
                        .HasConstraintName("FK_Jogador_Clube");
                });

            modelBuilder.Entity("Rural.Dominio.Models.Jogos", b =>
                {
                    b.HasOne("Rural.Dominio.Models.Campeonato", "IdCampeonatoNavigation")
                        .WithMany("Jogos")
                        .HasForeignKey("IdCampeonato")
                        .HasConstraintName("FK_Jogos_Campeonato");
                });

            modelBuilder.Entity("Rural.Dominio.Models.Sumula", b =>
                {
                    b.HasOne("Rural.Dominio.Models.Campeonato", "IdCampeonatoNavigation")
                        .WithMany("Sumula")
                        .HasForeignKey("IdCampeonato")
                        .HasConstraintName("FK_Sumula_Campeonato");

                    b.HasOne("Rural.Dominio.Models.Jogos", "IdJogosNavigation")
                        .WithMany("Sumula")
                        .HasForeignKey("IdJogos")
                        .HasConstraintName("FK_Sumula_Jogos");
                });

            modelBuilder.Entity("Rural.Dominio.Models.SumulaDetalhes", b =>
                {
                    b.HasOne("Rural.Dominio.Models.Clube", "IdClubeNavigation")
                        .WithMany("SumulaDetalhes")
                        .HasForeignKey("IdClube")
                        .HasConstraintName("FK_SumulaDetalhes_Clube");

                    b.HasOne("Rural.Dominio.Models.Jogador", "IdJogadorNavigation")
                        .WithMany("SumulaDetalhes")
                        .HasForeignKey("IdJogador")
                        .HasConstraintName("FK_SumulaDetalhes_Jogador");

                    b.HasOne("Rural.Dominio.Models.Sumula", "IdSumulaNavigation")
                        .WithMany("SumulaDetalhes")
                        .HasForeignKey("IdSumula")
                        .HasConstraintName("FK_SumulaDetalhes_Sumula");
                });
#pragma warning restore 612, 618
        }
    }
}
